{
  "info": {
    "name": "primer-api",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.primer.io",
      "type": "string"
    },
    {
      "key": "X-API-KEY",
      "value": "",
      "type": "string"
    }
  ],
  "auth": {
    "apikey": [
      {
        "key": "value",
        "value": "{{X-API-KEY}}",
        "type": "string"
      },
      {
        "key": "key",
        "value": "{{X-API-KEY}}",
        "type": "string"
      },
      {
        "key": "in",
        "value": "header",
        "type": "string"
      }
    ],
    "type": "apikey"
  },
  "item": [
    {
      "name": "Client Session",
      "item": [
        {
          "name": "create",
          "request": {
            "description": "Creating a client session generates a client token: a temporary key used to initialize Universal Checkout and authenticate it against your account.\nUniversal Checkout automatically retrieves all the settings from the client session and the Dashboard to configure the payment methods and the checkout experience.\n\nNote:\nWhen creating a Client Session, please make sure to provide currencyCode, orderId, and at least one of amount or lineItems.\nIf any of these are not yet available, you can provide them when making the payment request.\nPOST /client-session does not have required fields as all fields are not always known when a client session is created.\nUse PATCH /client-session to update the parameters throughout the checkout session.\n\nClient tokens expire after 24 hours.\n",
            "url": {
              "raw": "{{baseUrl}}/client-session",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "client-session"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "X-API-KEY",
                "value": "{{X-API-KEY}}",
                "type": "string"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"order\": {\n        \"lineItems\": [\n            {\n                \"itemId\": \"shoe-123\",\n                \"description\": \"Blue Shoe\",\n                \"amount\": 100,\n                \"quantity\": 10\n            }\n        ],\n        \"countryCode\": \"FR\"\n    },\n    \"customer\": {\n        \"emailAddress\": \"john@primer.io\"\n    },\n    \"metadata\": {\n        \"productType\": \"Shoes\"\n    },\n    \"paymentMethod\": {\n        \"options\": {\n            \"PAYMENT_CARD\": {\n                \"networks\": {\n                    \"VISA\": {\n                        \"surcharge\": {\n                            \"amount\": 10\n                        }\n                    }\n                }\n            },\n            \"GOOGLE_PAY\": {\n                \"surcharge\": {\n                    \"amount\": 20\n                }\n            }\n        },\n        \"descriptor\": \"Purchase: Shoes\",\n        \"vaultOnSuccess\": true\n    },\n    \"orderId\": \"order-abc\",\n    \"currencyCode\": \"GBP\",\n    \"amount\": 1000,\n    \"customerId\": \"customer-123\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "name": "Success",
              "status": "OK",
              "code": 200,
              "originalRequest": {
                "description": "Creating a client session generates a client token: a temporary key used to initialize Universal Checkout and authenticate it against your account.\nUniversal Checkout automatically retrieves all the settings from the client session and the Dashboard to configure the payment methods and the checkout experience.\n\nNote:\nWhen creating a Client Session, please make sure to provide currencyCode, orderId, and at least one of amount or lineItems.\nIf any of these are not yet available, you can provide them when making the payment request.\nPOST /client-session does not have required fields as all fields are not always known when a client session is created.\nUse PATCH /client-session to update the parameters throughout the checkout session.\n\nClient tokens expire after 24 hours.\n",
                "url": {
                  "raw": "{{baseUrl}}/client-session",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "client-session"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-API-KEY",
                    "value": "{{X-API-KEY}}",
                    "type": "string"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"order\": {\n        \"lineItems\": [\n            {\n                \"itemId\": \"shoe-123\",\n                \"description\": \"Blue Shoe\",\n                \"amount\": 100,\n                \"quantity\": 10\n            }\n        ],\n        \"countryCode\": \"FR\"\n    },\n    \"customer\": {\n        \"emailAddress\": \"john@primer.io\"\n    },\n    \"metadata\": {\n        \"productType\": \"Shoes\"\n    },\n    \"paymentMethod\": {\n        \"options\": {\n            \"PAYMENT_CARD\": {\n                \"networks\": {\n                    \"VISA\": {\n                        \"surcharge\": {\n                            \"amount\": 10\n                        }\n                    }\n                }\n            },\n            \"GOOGLE_PAY\": {\n                \"surcharge\": {\n                    \"amount\": 20\n                }\n            }\n        },\n        \"descriptor\": \"Purchase: Shoes\",\n        \"vaultOnSuccess\": true\n    },\n    \"orderId\": \"order-abc\",\n    \"currencyCode\": \"GBP\",\n    \"amount\": 1000,\n    \"customerId\": \"customer-123\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "body": "{\n    \"clientToken\": \"client-session-token\",\n    \"clientExpirationDate\": \"2019-08-24T14:15:22Z\",\n    \"customerId\": \"customer-123\",\n    \"orderId\": \"order-abc\",\n    \"currencyCode\": \"GBP\",\n    \"metadata\": {\n        \"productType\": \"Shoe\"\n    },\n    \"customer\": {\n        \"emailAddress\": \"john@primer.io\"\n    },\n    \"amount\": 20,\n    \"order\": {\n        \"countryCode\": \"FR\",\n        \"fees\": [\n            {\n                \"type\": \"SURCHARGE\",\n                \"amount\": 20\n            }\n        ]\n    },\n    \"paymentMethod\": {\n        \"vaultOnSuccess\": true,\n        \"options\": {\n            \"PAYMENT_CARD\": {\n                \"networks\": {\n                    \"VISA\": {\n                        \"surcharge\": {\n                            \"amount\": 10\n                        }\n                    }\n                }\n            },\n            \"GOOGLE_PAY\": {\n                \"surcharge\": {\n                    \"amount\": 20\n                }\n            }\n        }\n    }\n}",
              "_postman_previewlanguage": "json"
            },
            {
              "name": "Client Session Validation Error",
              "status": "Client Session Validation Error",
              "code": 400,
              "originalRequest": {
                "description": "Creating a client session generates a client token: a temporary key used to initialize Universal Checkout and authenticate it against your account.\nUniversal Checkout automatically retrieves all the settings from the client session and the Dashboard to configure the payment methods and the checkout experience.\n\nNote:\nWhen creating a Client Session, please make sure to provide currencyCode, orderId, and at least one of amount or lineItems.\nIf any of these are not yet available, you can provide them when making the payment request.\nPOST /client-session does not have required fields as all fields are not always known when a client session is created.\nUse PATCH /client-session to update the parameters throughout the checkout session.\n\nClient tokens expire after 24 hours.\n",
                "url": {
                  "raw": "{{baseUrl}}/client-session",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "client-session"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-API-KEY",
                    "value": "{{X-API-KEY}}",
                    "type": "string"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"order\": {\n        \"lineItems\": [\n            {\n                \"itemId\": \"shoe-123\",\n                \"description\": \"Blue Shoe\",\n                \"amount\": 100,\n                \"quantity\": 10\n            }\n        ],\n        \"countryCode\": \"FR\"\n    },\n    \"customer\": {\n        \"emailAddress\": \"john@primer.io\"\n    },\n    \"metadata\": {\n        \"productType\": \"Shoes\"\n    },\n    \"paymentMethod\": {\n        \"options\": {\n            \"PAYMENT_CARD\": {\n                \"networks\": {\n                    \"VISA\": {\n                        \"surcharge\": {\n                            \"amount\": 10\n                        }\n                    }\n                }\n            },\n            \"GOOGLE_PAY\": {\n                \"surcharge\": {\n                    \"amount\": 20\n                }\n            }\n        },\n        \"descriptor\": \"Purchase: Shoes\",\n        \"vaultOnSuccess\": true\n    },\n    \"orderId\": \"order-abc\",\n    \"currencyCode\": \"GBP\",\n    \"amount\": 1000,\n    \"customerId\": \"customer-123\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "body": "{\n    \"errorId\": \"ClientSessionValidationError\",\n    \"description\": \"The client token is invalid.\",\n    \"diagnosticsId\": \"1234567898\",\n    \"validationErrors\": {\n        \"validationErrors\": [\n            {\n                \"model\": \"ClientSessionAPIRequest\",\n                \"errors\": [\n                    {\n                        \"path\": \"$.customerId\",\n                        \"description\": \"Value must be a valid string\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
              "_postman_previewlanguage": "json"
            },
            {
              "name": "Request Validation Error",
              "status": "Request Validation Error",
              "code": 422,
              "originalRequest": {
                "description": "Creating a client session generates a client token: a temporary key used to initialize Universal Checkout and authenticate it against your account.\nUniversal Checkout automatically retrieves all the settings from the client session and the Dashboard to configure the payment methods and the checkout experience.\n\nNote:\nWhen creating a Client Session, please make sure to provide currencyCode, orderId, and at least one of amount or lineItems.\nIf any of these are not yet available, you can provide them when making the payment request.\nPOST /client-session does not have required fields as all fields are not always known when a client session is created.\nUse PATCH /client-session to update the parameters throughout the checkout session.\n\nClient tokens expire after 24 hours.\n",
                "url": {
                  "raw": "{{baseUrl}}/client-session",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "client-session"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-API-KEY",
                    "value": "{{X-API-KEY}}",
                    "type": "string"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"orderId\": \"order_00123\",\n    \"currencyCode\": \"USD\",\n    \"amount\": 1900,\n    \"order\": {\n        \"lineItems\": [\n            {\n                \"itemId\": \"sku-001\",\n                \"name\": \"My first item\",\n                \"description\": \"The first item I've created.\",\n                \"amount\": 700,\n                \"quantity\": 2,\n                \"discountAmount\": 10,\n                \"taxAmount\": 7,\n                \"productType\": \"DIGITAL\",\n                \"productData\": {\n                    \"sku\": \"sku-001\",\n                    \"brand\": \"MyBrand\",\n                    \"color\": \"Grey\",\n                    \"globalTradeItemNumber\": null,\n                    \"manufacturerPartNumber\": null,\n                    \"weight\": 70,\n                    \"weightUnit\": \"kg\"\n                }\n            }\n        ],\n        \"countryCode\": \"DE\",\n        \"fees\": [\n            {\n                \"amount\": 700,\n                \"type\": \"conversion\",\n                \"description\": \"Currency conversion fee\"\n            }\n        ],\n        \"shipping\": {\n            \"amount\": 300\n        }\n    },\n    \"customerId\": \"customer-123\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "body": "{\n    \"errorId\": \"RequestValidationError\",\n    \"description\": \"We were unable to validate your request, please check your payload against https://primer.io/docs/api\",\n    \"diagnosticsId\": \"1234567898\",\n    \"validationErrors\": [\n        {\n            \"model\": \"RequestValidationError\",\n            \"errors\": [\n                {\n                    \"path\": \"$.customerId\",\n                    \"description\": \"Value must be a valid string\"\n                }\n            ]\n        }\n    ]\n}",
              "_postman_previewlanguage": "json"
            }
          ],
          "_type": "endpoint"
        },
        {
          "name": "get",
          "request": {
            "description": "Retrieve a client session. This API call retrieves all the details associated with the client session corresponding to the client token that is provided in the request. The fields with empty values are excluded from the response.",
            "url": {
              "raw": "{{baseUrl}}/client-session?clientToken=",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "client-session"
              ],
              "query": [
                {
                  "key": "clientToken",
                  "value": "",
                  "description": "Client token corresponding to the client session to retrieve"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "X-API-KEY",
                "value": "{{X-API-KEY}}",
                "type": "string"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "_type": "endpoint"
        },
        {
          "name": "update",
          "request": {
            "description": "Update a client session.\nThe only required field for the request is clientToken. Other supported request fields are same as for the POST /client-session API call.\nYou need to specify only the fields you wish to update. However, if the items that are to be updated are of type array, then you need to provide the complete array along with modified items.\nIf you wish to update nested fields on the client session, such as the customer emailAddress field, you can pass the customer object with only one field, emailAddress, to update.\nIf you simply wish to clear the value of the field, pass null as your input.\nYou can update paymentMethod.vaultOnSuccess field but updating of the paymentMethod.options field through PATCH /client-session is not supported.\nThe response will contain all the fields of the client session including the ones that were changed.\n",
            "url": {
              "raw": "{{baseUrl}}/client-session",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "client-session"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "X-API-KEY",
                "value": "{{X-API-KEY}}",
                "type": "string"
              }
            ],
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"clientToken\": \"example\",\n    \"orderId\": \"example\",\n    \"currencyCode\": \"AED\",\n    \"amount\": 0,\n    \"order\": {\n        \"lineItems\": [\n            {\n                \"itemId\": \"example\",\n                \"name\": \"example\",\n                \"description\": \"example\",\n                \"amount\": 0,\n                \"quantity\": 0,\n                \"discountAmount\": 0,\n                \"taxAmount\": 0,\n                \"taxCode\": \"example\",\n                \"productType\": \"example\",\n                \"productData\": {\n                    \"sku\": \"example\",\n                    \"brand\": \"example\",\n                    \"color\": \"example\",\n                    \"globalTradeItemNumber\": \"example\",\n                    \"manufacturerPartNumber\": \"example\",\n                    \"weight\": 0,\n                    \"weightUnit\": \"example\"\n                }\n            }\n        ],\n        \"countryCode\": \"AW\",\n        \"fees\": [\n            {\n                \"amount\": 0,\n                \"type\": \"example\",\n                \"description\": \"example\"\n            }\n        ],\n        \"shipping\": {\n            \"amount\": 0\n        }\n    },\n    \"customer\": {\n        \"emailAddress\": \"example\",\n        \"mobileNumber\": \"example\",\n        \"firstName\": \"example\",\n        \"lastName\": \"example\",\n        \"billingAddress\": {\n            \"firstName\": \"example\",\n            \"lastName\": \"example\",\n            \"addressLine1\": \"example\",\n            \"addressLine2\": \"example\",\n            \"city\": \"example\",\n            \"state\": \"example\",\n            \"countryCode\": \"AW\",\n            \"postalCode\": \"example\"\n        },\n        \"shippingAddress\": {\n            \"firstName\": \"example\",\n            \"lastName\": \"example\",\n            \"addressLine1\": \"example\",\n            \"addressLine2\": \"example\",\n            \"city\": \"example\",\n            \"state\": \"example\",\n            \"countryCode\": \"AW\",\n            \"postalCode\": \"example\"\n        },\n        \"taxId\": \"example\",\n        \"nationalDocumentId\": \"example\"\n    },\n    \"metadata\": {\n        \"example\": \"UNKNOWN\"\n    },\n    \"paymentMethod\": {\n        \"vaultOnSuccess\": true,\n        \"descriptor\": \"example\",\n        \"paymentType\": \"FIRST_PAYMENT\",\n        \"options\": {\n            \"PAYMENT_CARD\": {\n                \"networks\": {\n                    \"AMEX\": {\n                        \"surcharge\": {\n                            \"amount\": 0\n                        }\n                    }\n                },\n                \"surcharge\": {\n                    \"amount\": 0\n                }\n            }\n        }\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "_type": "endpoint"
        }
      ],
      "_type": "container"
    },
    {
      "name": "Payment Method",
      "item": [
        {
          "name": "saveToken",
          "request": {
            "description": "Save a `SINGLE_USE` payment method token so it can be used\nagain later. You can optionally choose to verify the payment method\nbefore vaulting. If verification fails, no payment method data will\nbe vaulted. Verification can minimise fraud and boost subscription\nrates for recurring payments.\n\nIf you try to vault an already vaulted token, you will get the existing vaulted token back.\n",
            "url": {
              "raw": "{{baseUrl}}/payment-instruments/:paymentMethodToken/vault",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "payment-instruments",
                ":paymentMethodToken",
                "vault"
              ],
              "query": [],
              "variable": [
                {
                  "key": "paymentMethodToken",
                  "value": "",
                  "description": "Payment method token to store."
                }
              ]
            },
            "header": [
              {
                "key": "X-API-KEY",
                "value": "{{X-API-KEY}}",
                "type": "string"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"customerId\": \"example\",\n    \"verify\": true\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "_type": "endpoint"
        },
        {
          "name": "list",
          "request": {
            "description": "Retrieve a list of stored payment methods for a customer.",
            "url": {
              "raw": "{{baseUrl}}/payment-instruments?customer_id=",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "payment-instruments"
              ],
              "query": [
                {
                  "key": "customer_id",
                  "value": "",
                  "description": "Return payment methods for this customer ID."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "X-API-KEY",
                "value": "{{X-API-KEY}}",
                "type": "string"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "_type": "endpoint"
        },
        {
          "name": "delete",
          "request": {
            "description": "Delete a saved payment method.",
            "url": {
              "raw": "{{baseUrl}}/payment-instruments/:paymentMethodToken",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "payment-instruments",
                ":paymentMethodToken"
              ],
              "query": [],
              "variable": [
                {
                  "key": "paymentMethodToken",
                  "value": "",
                  "description": "Saved payment method token to delete."
                }
              ]
            },
            "header": [
              {
                "key": "X-API-KEY",
                "value": "{{X-API-KEY}}",
                "type": "string"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "_type": "endpoint"
        },
        {
          "name": "updateDefault",
          "request": {
            "description": "Update a saved payment method to be the default stored payment method for a customer.",
            "url": {
              "raw": "{{baseUrl}}/payment-instruments/:paymentMethodToken/default",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "payment-instruments",
                ":paymentMethodToken",
                "default"
              ],
              "query": [],
              "variable": [
                {
                  "key": "paymentMethodToken",
                  "value": "",
                  "description": "Saved payment method token to set to default."
                }
              ]
            },
            "header": [
              {
                "key": "X-API-KEY",
                "value": "{{X-API-KEY}}",
                "type": "string"
              }
            ],
            "method": "POST"
          },
          "response": [],
          "_type": "endpoint"
        }
      ],
      "_type": "container"
    },
    {
      "name": "Payments",
      "item": [
        {
          "name": "search",
          "request": {
            "description": "Search and retrieve a list of your payments. \nResults are paginated, they will only return up to 100 payments maximum. \nTo access the next page of result, set the cursor query parameter to the value of nextCursor in your current result payload. \nUse prevCursor to go back to the previous page.\nPayments will be available within a minute from being created.\n",
            "url": {
              "raw": "{{baseUrl}}/payments?status=&payment_method_type=&processor=&currency_code=&from_date=&to_date=&order_id=&min_amount=&max_amount=&customer_id=&merchant_id=&customer_email_address=&last_4_digits=&paypal_email=&klarna_email=&limit=&cursor=",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "payments"
              ],
              "query": [
                {
                  "key": "status",
                  "value": "",
                  "description": "Filter payments by their status. For example, \"FAILED,CANCELLED”"
                },
                {
                  "key": "payment_method_type",
                  "value": "",
                  "description": "Filter payments by their payment method type. For example, \"PAYMENT_CARD,APPLE_PAY\""
                },
                {
                  "key": "processor",
                  "value": "",
                  "description": "Filter payments by their payment processor. For example, \"Stripe,Braintree\""
                },
                {
                  "key": "currency_code",
                  "value": "",
                  "description": "Filter payments by their payment currency. For example, \"USD,EUR\" for US dollars and Euro"
                },
                {
                  "key": "from_date",
                  "value": "",
                  "description": "Return only payments from this date (inclusive)."
                },
                {
                  "key": "to_date",
                  "value": "",
                  "description": "Return only payments up to this date (inclusive)."
                },
                {
                  "key": "order_id",
                  "value": "",
                  "description": "Return payments related to this order ID."
                },
                {
                  "key": "min_amount",
                  "value": "",
                  "description": "Return payments of this amount minimum (inclusive)."
                },
                {
                  "key": "max_amount",
                  "value": "",
                  "description": "Return payments of this amount max (inclusive)."
                },
                {
                  "key": "customer_id",
                  "value": "",
                  "description": "ID of the customer that has made the payment. For example, \"anna-123,dirk-456\""
                },
                {
                  "key": "merchant_id",
                  "value": "",
                  "description": "ID of the merchant involved in the payment."
                },
                {
                  "key": "customer_email_address",
                  "value": "",
                  "description": "Email of the customer that has made the payment. For example, \"mary@gm.com,ginni@ibm.com\""
                },
                {
                  "key": "last_4_digits",
                  "value": "",
                  "description": "Last 4 digits of the card used for the payment. For example, \"4839,8709\""
                },
                {
                  "key": "paypal_email",
                  "value": "",
                  "description": "Paypal email address associated with the payment. For example, \"mary@gm.com,ginni@ibm.com\""
                },
                {
                  "key": "klarna_email",
                  "value": "",
                  "description": "Klarna email address associated with the payment. \"mary@gm.com,ginni@ibm.com\""
                },
                {
                  "key": "limit",
                  "value": "",
                  "description": "Maximum number of payments to return per page. Between 1 and 100."
                },
                {
                  "key": "cursor",
                  "value": "",
                  "description": "If results are paginated, pass the nextCursor to access next page."
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "X-API-KEY",
                "value": "{{X-API-KEY}}",
                "type": "string"
              },
              {
                "key": "X-Idempotency-Key",
                "type": "text",
                "value": "\"example\""
              }
            ],
            "method": "GET"
          },
          "response": [],
          "_type": "endpoint"
        },
        {
          "name": "create",
          "request": {
            "description": "Create and authorize a payment for a given customer order. \nYou should provide a payment method token here to avoid PCI implications.\nIf only a payment method token is passed, the values passed with the Client Session is used to determine the amount, currency etc.\nNote: amount, currencyCode and orderId are required during payment creation.\nMake sure to pass these fields when creating a client session, or if not yet available, when creating a payment.\nAll fields provided on this request will take preference over any field on the order associated with the client session. \nE.g. if you pass amount on this request, it will override the amount on the order associated with the Client Session.\n",
            "url": {
              "raw": "{{baseUrl}}/payments",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "payments"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "X-API-KEY",
                "value": "{{X-API-KEY}}",
                "type": "string"
              },
              {
                "key": "X-Idempotency-Key",
                "type": "text",
                "value": "\"example\""
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"orderId\": \"example\",\n    \"currencyCode\": \"AED\",\n    \"amount\": 0,\n    \"order\": {\n        \"lineItems\": [\n            {\n                \"itemId\": \"example\",\n                \"name\": \"example\",\n                \"description\": \"example\",\n                \"amount\": 0,\n                \"quantity\": 0,\n                \"discountAmount\": 0,\n                \"taxAmount\": 0,\n                \"taxCode\": \"example\",\n                \"productType\": \"example\",\n                \"productData\": {\n                    \"sku\": \"example\",\n                    \"brand\": \"example\",\n                    \"color\": \"example\",\n                    \"globalTradeItemNumber\": \"example\",\n                    \"manufacturerPartNumber\": \"example\",\n                    \"weight\": 0,\n                    \"weightUnit\": \"example\"\n                }\n            }\n        ],\n        \"countryCode\": \"AW\",\n        \"fees\": [\n            {\n                \"amount\": 0,\n                \"type\": \"example\",\n                \"description\": \"example\"\n            }\n        ],\n        \"shipping\": {\n            \"amount\": 0\n        }\n    },\n    \"paymentMethodToken\": \"example\",\n    \"customerId\": \"example\",\n    \"customer\": {\n        \"emailAddress\": \"example\",\n        \"mobileNumber\": \"example\",\n        \"firstName\": \"example\",\n        \"lastName\": \"example\",\n        \"billingAddress\": {\n            \"firstName\": \"example\",\n            \"lastName\": \"example\",\n            \"addressLine1\": \"example\",\n            \"addressLine2\": \"example\",\n            \"city\": \"example\",\n            \"state\": \"example\",\n            \"countryCode\": \"AW\",\n            \"postalCode\": \"example\"\n        },\n        \"shippingAddress\": {\n            \"firstName\": \"example\",\n            \"lastName\": \"example\",\n            \"addressLine1\": \"example\",\n            \"addressLine2\": \"example\",\n            \"city\": \"example\",\n            \"state\": \"example\",\n            \"countryCode\": \"AW\",\n            \"postalCode\": \"example\"\n        },\n        \"taxId\": \"example\",\n        \"nationalDocumentId\": \"example\"\n    },\n    \"metadata\": {\n        \"example\": \"UNKNOWN\"\n    },\n    \"paymentMethod\": {\n        \"vaultOnSuccess\": true,\n        \"descriptor\": \"example\",\n        \"paymentType\": \"FIRST_PAYMENT\",\n        \"options\": {\n            \"PAYMENT_CARD\": {\n                \"networks\": {\n                    \"AMEX\": {\n                        \"surcharge\": {\n                            \"amount\": 0\n                        }\n                    }\n                },\n                \"surcharge\": {\n                    \"amount\": 0\n                }\n            }\n        }\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "_type": "endpoint"
        },
        {
          "name": "capture",
          "request": {
            "description": "If you have successfully authorized a payment, you can now\nfully capture, or partially capture funds from the authorized payment, depending\non whether your selected payment processor supports it. The payment will\nbe updated to SETTLED or SETTLING, depending on the payment method type.\n\nThe payload sent in this capture request is completely optional. If you don't\nsend a payload with the capture request, the full amount that was authorized\nwill be sent for capture. Below are the available payload attributes, which\ngive you more granular control when capturing funds, if you require it.\n",
            "url": {
              "raw": "{{baseUrl}}/payments/:id/capture",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "payments",
                ":id",
                "capture"
              ],
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "",
                  "description": "ID of the payment to capture."
                }
              ]
            },
            "header": [
              {
                "key": "X-API-KEY",
                "value": "{{X-API-KEY}}",
                "type": "string"
              },
              {
                "key": "X-Idempotency-Key",
                "type": "text",
                "value": "\"example\""
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"amount\": 0,\n    \"final\": true\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "_type": "endpoint"
        },
        {
          "name": "cancel",
          "request": {
            "description": "Provided the payment has not reached `SETTLED` status, Primer will\nsend a \"void\" request to the payment processor, thereby cancelling the payment\nand releasing the hold on customer funds. Upon success, the payment will transition\nto `CANCELLED`. The payload is optional.\n",
            "url": {
              "raw": "{{baseUrl}}/payments/:id/cancel",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "payments",
                ":id",
                "cancel"
              ],
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "",
                  "description": "ID of the payment to cancel."
                }
              ]
            },
            "header": [
              {
                "key": "X-API-KEY",
                "value": "{{X-API-KEY}}",
                "type": "string"
              },
              {
                "key": "X-Idempotency-Key",
                "type": "text",
                "value": "\"example\""
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"reason\": \"example\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "_type": "endpoint"
        },
        {
          "name": "refund",
          "request": {
            "description": "By default, this request will refund the full amount. Optionally, pass in a lesser amount for a partial refund.",
            "url": {
              "raw": "{{baseUrl}}/payments/:id/refund",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "payments",
                ":id",
                "refund"
              ],
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "",
                  "description": "ID of the payment to refund."
                }
              ]
            },
            "header": [
              {
                "key": "X-API-KEY",
                "value": "{{X-API-KEY}}",
                "type": "string"
              },
              {
                "key": "X-Idempotency-Key",
                "type": "text",
                "value": "\"example\""
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"amount\": 0,\n    \"orderId\": \"example\",\n    \"reason\": \"example\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "_type": "endpoint"
        },
        {
          "name": "resume",
          "request": {
            "description": "Resume a payment's workflow execution from a paused state.\nThis is usually required when a Workflow was paused in order to get further information\nfrom the customer, or when waiting for an asynchronous response from a third party connection.\n",
            "url": {
              "raw": "{{baseUrl}}/payments/:id/resume",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "payments",
                ":id",
                "resume"
              ],
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "",
                  "description": "ID of the payment to resume."
                }
              ]
            },
            "header": [
              {
                "key": "X-API-KEY",
                "value": "{{X-API-KEY}}",
                "type": "string"
              },
              {
                "key": "X-Idempotency-Key",
                "type": "text",
                "value": "\"example\""
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"resumeToken\": \"example\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "_type": "endpoint"
        },
        {
          "name": "get",
          "request": {
            "description": "Retrieve a payment by its ID.",
            "url": {
              "raw": "{{baseUrl}}/payments/:id/resume",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "payments",
                ":id",
                "resume"
              ],
              "query": [],
              "variable": [
                {
                  "key": "id",
                  "value": "",
                  "description": "ID of the payment to retrieve."
                }
              ]
            },
            "header": [
              {
                "key": "X-API-KEY",
                "value": "{{X-API-KEY}}",
                "type": "string"
              },
              {
                "key": "X-Idempotency-Key",
                "type": "text",
                "value": "\"example\""
              }
            ],
            "method": "GET"
          },
          "response": [],
          "_type": "endpoint"
        }
      ],
      "_type": "container"
    }
  ]
}